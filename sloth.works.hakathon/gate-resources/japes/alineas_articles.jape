Phase:	ArticlePrefix
Input:  Lookup Token DottedNumber
Options: control = appelt

Rule:ArticlePrefix
Priority: 5

(
 { Lookup.majorType == "article" }
 ( { Token.string == "." } )?
 ( { Token.kind == "number" } ):num
 ( { Token.string== "." } )?
):article
-->
 :article.ArticlePrefix = { rule = "ArticlePrefix", number = :num.Token.string },
 {
     AnnotationSet tokens = (AnnotationSet) bindings.get("article");
     AnnotationSet dottedNumber = tokens.get("DottedNumber", tokens.firstNode().getOffset(), tokens.lastNode().getOffset());
     inputAS.removeAll(dottedNumber);
 }


Phase: ArticleStart
Input: ArticlePrefix SpaceToken
Options: control = appelt

Rule:ArticleStart
Priority: 5

(
  { SpaceToken.kind=="control" }
  ( { ArticlePrefix } ):ap
):astart

-->
:astart.ArticleStart = { rule = "ArticleStart", number = :ap.ArticlePrefix.number }


Phase:	AlineaPrefix
Input:  Token Lookup
Options: control = appelt

Rule: AlineaPrefix
Priority: 10

( { Token } ):alineaEnd
(
 { Token.string == "(" } { Token.kind == number } { Token.string == ")" }
):alinea
-->
 :alinea.AlineaPrefix = { rule = "AlineaPrefix" },
 :alineaEnd.AlineaEnd = { rule = "AlineaEnd" }


Phase:	AlineaPrefix2
Input:  DottedNumber Token
Options: control = appelt

Rule: AlineaPrefix2
Priority: 10

(
 ( { Token } ):alineaEnd
 ( { DottedNumber } ):ap
)
-->
 :ap.AlineaPrefix = { rule = "AlineaPrefix2" , number = :ap.DottedNumber.number },
 {
     AnnotationSet tokens = (AnnotationSet) bindings.get("ap");
     AnnotationSet dottedNumber = tokens.get("DottedNumber", tokens.firstNode().getOffset(), tokens.lastNode().getOffset());
     inputAS.removeAll(dottedNumber);
 },
 :alineaEnd.AlineaEnd = { rule = "AlineaEnd" }


Phase:	AlineaContent
Input:  AlineaStart AlineaEnd DocEnd
Options: control = appelt

Rule:AlineaContent
Priority: 10

(
 ( { AlineaStart } ):prefix
 ( { AlineaEnd } | { DocEnd } )
):alinea
-->
 :alinea.AlineaContent = { rule = "AlineaContent" , number = :prefix.AlineaStart.number }


Phase:	ArticleEnd
Input:  ArticlePrefix Token
Options: control = appelt

Rule:ArticleEnd
Priority: 10

(
 ( { Token } ):articleEnd
 { ArticlePrefix }
)
-->
 :articleEnd.ArticleEnd = { rule = "ArticleEnd" },
 :articleEnd.AlineaEnd = { rule = "ArticleEnd" }



Phase:	ArticleContent
Input:  ArticlePrefix Token ArticleEnd DocEnd
Options: control = first

Rule:ArticleContent
Priority: 10

(
 ( { ArticlePrefix } ):prefix
 ( { Token } )+
 ( { ArticleEnd } | { DocEnd })
):article
-->
 :article.ArticleContent = { rule = "ArticleContent", number = :prefix.ArticlePrefix.number }


Phase: NumberedChapter
Input: Chapter Counting Token
Options: control = first

Rule: NumberedChapter
Priority: 10
(
 ( { Chapter }
   { Counting } )
 |
 ( { Counting }
   { Chapter } )
):nc
-->
 :nc.NumberedChapter = { rule = "NumberedChapter" }
